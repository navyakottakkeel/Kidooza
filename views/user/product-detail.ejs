
<%-include("../../views/partials/user/header") %>


<style>
    .thumbnail-img {
      width: 80px;
      margin-bottom: 10px;
      cursor: pointer;
      border: 2px solid transparent;
      transition: border 0.3s;
    }
  
    .thumbnail-img.active {
      border: 2px solid #f27c1f; /* Highlight color */
    }

    .zoom-container {
  position: relative;
  width: 480px;
  height: auto;
  overflow: hidden;
}

.zoom-image {
  width: 100%;
  display: block;
}

.zoom-lens {
  position: absolute;
  border: 1px solid #000;
  width: 200px;
  height: 200px;
  visibility: hidden;
  pointer-events: none;
  background-repeat: no-repeat;
  background-size: 800px 800px; /* Should be double the original for smoother zoom */
  z-index: 10;
}
.breadcrumbs a {
  color: #007bff;
  text-decoration: none;
}
.breadcrumbs span {
  color: #333;
}
.product-rating {
    font-size: 1.1rem;
    margin-bottom: 10px;
    color: #f5a623; /* golden yellow */
  }

  .product-rating .review-count {
    color: #555;
    font-size: 0.95rem;
    margin-left: 8px;
  }

  .review-section {
    border-top: 1px solid #ccc;
    margin-top: 20px;
    padding-top: 15px;
  }

  .review {
    background: #f8f8f8;
    padding: 12px;
    margin-top: 10px;
    border-radius: 5px;
  }

  .review strong {
    font-size: 1rem;
    display: inline-block;
    margin-bottom: 4px;
  }

  .review span {
    color: #f5a623;
    margin-left: 5px;
  }
  .product-price {
    font-size: 1.2rem;
    margin: 10px 0;
    display: flex;
    align-items: center;
    gap: 10px;
  }

  .selling-price {
    font-weight: bold;
    color: #222;
    font-size: 1.4rem;
  }

  .original-price {
    color: #999;
    font-size: 1rem;
  }

  .discount-tag {
    background-color:#5d8355;
    color: #fff;
    padding: 2px 8px;
    font-size: 0.85rem;
    border-radius: 5px;
  }
  .size-selection-wrapper {
    margin: 20px 0;
  }

  .size-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 10px;
  }

  .size-chart-link {
    font-size: 0.9rem;
    color: #f16522; /* Orange like in screenshot */
    text-decoration: none;
  }

  .size-options {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
  }

  .size-btn {
    border: 1px solid #ccc;
    border-radius: 25px;
    padding: 8px 16px;
    font-size: 0.95rem;
    background-color: white;
    cursor: pointer;
    transition: 0.2s ease-in-out;
    min-width: 70px;
    text-align: center;
  }

  .size-btn.selected {
    border-color: #f16522;
    background-color: #fff2eb;
    font-weight: 600;
    color: #f16522;
  }

  .size-btn:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
  .quick-actions {
    margin: 15px 0;
    display: flex;
    gap: 20px;
    flex-wrap: wrap;
  }

  .action-btn {
    background: none;
    border: none;
    color: #555;
    font-size: 1.15rem;
    cursor: pointer;
  }

  /* Quantity Selector */
  .quantity-selector {
    display: flex;
    align-items: center;
    gap: 10px;
    margin-bottom: 20px;
  }

  .quantity-selector button {
    background: #eee;
    border: none;
    padding: 5px 10px;
    font-size: 1.2rem;
    cursor: pointer;
  }

  .quantity-selector input {
    width: 40px;
    text-align: center;
    border: 1px solid #ccc;
    font-size: 1rem;
    border-radius: 5px;
  }

 
  .cart-actions button {
    display: block;
    width: 60%;
    padding: 12px;
    margin: 10px 0;
    font-size: 1rem;
    border: none;
    border-radius: 25px;
    cursor: pointer;
  }

  .btn-add-to-cart {
    background-color: #5d8255;
    color: #fff;
  }

  .btn-buy-now {
    background-color: #fa5d63; 
    color: #fff;
  }

  .recommended-section {
    margin-top: 60px;
    padding: 20px;
    background: #fefefe;
  }

  .recommended-section h2 {
    font-family: 'Caveat', cursive;
    font-size: 2rem;
    margin-bottom: 20px;
    color: #5c4c32;
  }

  .recommended-products {
    display: flex;
    gap: 20px;
    flex-wrap: wrap;
    justify-content: flex-start;
  }

  .product-card {
    background: #fff;
    border-radius: 12px;
    width: 180px;
    text-align: center;
    padding: 10px;
    position: relative;
    box-shadow: 0 2px 8px rgba(0,0,0,0.05);
  }

  .image-wrapper {
    position: relative;
  }

  .product-card img {
    width: 100%;
    height: auto;
    border-radius: 10px;
  }

  .discount-badge {
    position: absolute;
    top: 10px;
    left: 10px;
    background: #1d0e49;
    color: #fff;
    padding: 2px 6px;
    font-size: 0.75rem;
    border-radius: 4px;
  }

  .product-name {
    margin: 10px 0 5px;
    font-size: 0.95rem;
    color: #333;
  }

  .product-price {
    font-weight: bold;
    color: #e84a5f;
  }

  .original-price {
    font-weight: normal;
    text-decoration: line-through;
    font-size: 0.85rem;
    color: #888;
    margin-left: 5px;
  }
  .colour-options {
  display: flex;
  gap: 10px;
  margin-top: 5px;
}

.colour-circle {
  width: 30px;
  height: 30px;
  border-radius: 50%;
  cursor: pointer;
  border: 2px solid transparent;
  transition: transform 0.2s, border-color 0.2s;
}

.colour-circle.selected {
  border-color: #f16522; /* highlight */
  transform: scale(1.1);
}

.colour-circle:hover {
  transform: scale(1.05);
}
.quantity-selector {
    display: inline-flex;
    align-items: center;
    border: 1px solid #ddd;
    border-radius: 25px;
    overflow: hidden;
    background-color: white;
    font-size: 18px;
    margin-bottom: 15px;
    height: 40px;
}

.quantity-selector button {
    background: none;
    border: none;
    padding: 8px 14px;
    cursor: pointer;
    font-size: 20px;
    color: #333;
}

.quantity-selector span {
    padding: 0 14px;
    font-size: 16px;
    min-width: 30px;
    text-align: center;
}

.wishlist-btn {
      position: absolute;
      top: 8px;
      right: 8px;
      background: white;
      border: none;
      border-radius: 50%;
      width: 36px;
      height: 36px;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      transition: all 0.2s ease;
    }

    .wishlist-btn i {
      color: #555;
      font-size: 18px;
    }

    .wishlist-btn.active {
      background: red;
    }

    .wishlist-btn.active i {
      color: white;
    }

    .review-carousel {
  position: relative;
  max-width: 600px;
  margin: 0 auto;
  overflow: hidden; /* Important: hides offscreen reviews */
}

    .review-container {
  display: flex;
  transition: transform 0.4s ease-in-out;
  width: 100%;
}

.review {
  flex: 0 0 100%;
  padding: 20px;
  box-sizing: border-box;
  text-align: left;
  background: #fff;
  border-radius: 15px;
  box-shadow: 0 2px 10px rgba(0,0,0,0.1);
  box-sizing: border-box;
}

.carousel-btn {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  background: #ffffffcc;
  border: none;
  font-size: 24px;
  padding: 8px 12px;
  border-radius: 50%;
  cursor: pointer;
  box-shadow: 0 2px 6px rgba(0,0,0,0.1);
  transition: all 0.3s ease;
}

.carousel-btn:hover {
  background: #f8f8f8;
  transform: translateY(-50%) scale(1.1);
}

.left-btn { left: -40px; }
.right-btn { right: -40px; }

.dot-container {
  display: flex;
  justify-content: center;
  gap: 8px;
}

.dot {
  width: 10px;
  height: 10px;
  background: #bbb;
  border-radius: 50%;
  cursor: pointer;
  transition: background 0.3s;
}

.dot.active {
  background: #333;
}
  </style>
  


<div style="margin-top: 170px;">
     
    <div class="container my-5">
        
    <div class="breadcrumbs">
        <a href="/">Home</a> /
        <a href="/boys">Boys</a> /
        <span><%= product.productName %></span>
      </div>
      <br>
      <div class="row">
        <div class="col-md-6">
            <div style="display: flex; gap: 20px;">
                <!-- Thumbnail list -->
                <div id="thumbnailsContainer">
                  <% product.productImage.forEach((image, index) => { %>
                    <img src="<%= image %>"
                         class="thumbnail-img <%= index === 0 ? 'active' : '' %>"
                         data-index="<%= index %>"
                         onclick="changeMainImage(this, '<%= image %>')" /><br>
                  <% }); %>          
                </div>
                
                <!-- Main Image -->
                <div>
                    <div class="zoom-container position-relative">
                        <img id="mainImage" src="<%= product.productImage[0] %>" class="zoom-image" alt="Product Image" />
                        <div class="zoom-lens" id="zoomLens"></div>

                        <% const isWishlisted=wishlistItems.some( item=> item.productId.toString() ===
                                  product._id.toString() 
                                  ); %>

                                  <button class="wishlist-btn position-absolute top-0 end-0 m-2 <%= isWishlisted ? 'active' : '' %>"
                                    data-product-id="<%= product._id %>" data-colour=" ">
                                    <i class="fa fa-heart"></i>
                                  </button>
                      </div> 
                </div>
              </div>
                      </div>
        <div class="col-md-6">
          <h2><%= product.productName %></h2>
          <p><%= product.description %></p>

          <div class="product-rating">
            <span class="stars">★★★★☆</span> <!-- 4 out of 5 -->
            <span class="review-count">(2 review)</span>
          </div>

          

          <div class="product-price">
            <span class="selling-price">₹<%= product.salePrice %></span>
            
            <% if (product.basePrice  > product.salePrice) { %>
              <span class="original-price"><del>₹<%= product.basePrice %></del></span>
              <span class="discount-tag"><%= discountPercent %>% OFF</span>
            <% } %>

          </div>


          <% if (colours && colours.length > 0) { %>

            <div class="mt-3">
              <h5>Available Colours:</h5>
              <div class="colour-options">
                <% colours.forEach(function(colour, index) { %>
                  <div class="colour-circle <%= index === 0 ? 'selected' : '' %>"
                       style="background-color: <%= colour %>"
                       onclick="selectColour(this, '<%= colour %>')">
                  </div>
                <% }) %>
              </div>
              <input type="hidden" id="selectedColour" name="selectedColour" value="<%= colours[0] %>">
            </div>
            
    

            <div class="size-selection-wrapper">
                <div class="size-header">
                  <strong>Size</strong>
                </div>
                
                <div class="size-options">
                  <% sizes.forEach(function(size, index) { %>
                    <button type="button" class="size-btn <%= index === 0 ? 'selected' : '' %>" onclick="selectSize(this)">
                      <%= size %>
                    </button>
                  <% }) %>
                </div>
              
                <input type="hidden" id="selectedSize" name="selectedSize" value="<%= sizes[0] %>">
              </div>

              <div id="stock-info" class="font-semibold text-green-700" style="color: green;font-weight: bolder;font-family: cursive;"></div>
              <div id="stock-info2" class="font-semibold text-green-700" style="color: red;font-weight: bolder;font-family: cursive;"></div>



          <% } %>

          
          <!-- Add to Cart & Buy Now Buttons -->
          <div class="cart-actions">
            <form id="addToCartForm">
                <input type="hidden" name="productId" value="<%= product._id %>">
                <input type="hidden" name="variantId" id="variantIdInput" value="">

                <input type="hidden" name="saleValue" id="saleValue" value="<%= product.salePrice %>">
                <input type="hidden" name="baseValue" id="baseValue" value="<%= product.basePrice %>">
                <input type="hidden" name="discount" id="discount" value="<%= discountPercent %>">

                <div class="quantity-selector">
                  <button type="button" id="qty-decrease">-</button>
                  <span id="quantityDisplay">1</span>
                  <input type="hidden" id="quantityInput" name="quantity" value="1">
                  <button type="button" id="qty-increase">+</button>
              </div><label for="" style="color: #5d8255;">#Maximum quantity is 5</label>
              
              
                <button type="submit" id="addToCartBtn" class="btn btn-primary btn-add-to-cart">Add to Cart</button>
            </form>
        </div>

          <div class="review-section text-center mt-4">
            <h4>Customer Reviews</h4>
            <div class="review-carousel position-relative mx-auto" style="max-width: 600px;">
              <div id="reviewContainer" class="review-container"></div>
          
              <button id="prevReview" class="carousel-btn left-btn">❮</button>
              <button id="nextReview" class="carousel-btn right-btn">❯</button>
          
              <div id="dotContainer" class="dot-container mt-3"></div>
            </div>
          </div>
        </div>
      </div>


      <!-- Recommended Products Section -->
<div class="recommended-section">
    <h2>Recommended Products</h2>
    <div class="recommended-products">
      <% relatedProducts.forEach(prod => { %>
        <div class="product-card">
            <div class="image-wrapper">
                <% if (prod.productImage && prod.productImage.length > 0) { %>
                  <img src="<%= prod.productImage[0] %>" alt="<%= prod.productName %>">
                <% } else { %>
                  <img src="/images/default-product.jpg" alt="No Image">
                <% } %>
              
                <% if (discountPercent) { %>
                  <span class="discount-badge">OFF <%= discountPercent %>%</span>
                <% } %>
              </div>
              
          <p class="product-name"><%= prod.productName %></p>
          <p class="product-price">
            ₹<%= prod.salePrice %> 
            <span class="original-price">₹<%= prod.basePrice %></span>
          </p>
        </div>
      <% }) %>
    </div>
  </div>
    </div>    
</div>



<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  const wishlistItems = <%- JSON.stringify(wishlistItems) %>;
</script>


<script>
  document.querySelectorAll('.wishlist-btn').forEach(btn => {
    btn.addEventListener('click', function () {
      const productId = this.dataset.productId;
      //const variantId = this.dataset.variantId;
      const colour = this.dataset.colour;

      // Check if user is logged in (server will pass this in res.locals.user)
      const isLoggedIn = <%= user ? 'true' : 'false' %>;

      if (!isLoggedIn) {
        Swal.fire({
          title: 'Login Required',
          text: 'You need to log in to add items to your wishlist.',
          icon: 'warning',
          showCancelButton: true,
          confirmButtonText: 'Login',
          cancelButtonText: 'Cancel',
          confirmButtonColor: '#3085d6',
          cancelButtonColor: '#d33'
        }).then((result) => {
          if (result.isConfirmed) {
            window.location.href = '/login'; // Redirect to login
          }
        });
        return; // Stop here if not logged in
      }

            // Toggle wishlist
            fetch(`/wishlist/toggle`, {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ productId, colour })
        })
          .then(res => res.json())
          .then(data => {
            if (data.success) {
              if (data.action === "added") {
                this.classList.add('active');
                Swal.fire({
                  toast: true,
                  position: "bottom-end",
                  background: "#000",
                  color: "#fff",
                  icon: "success",
                  title: "Added to your Wishlist",
                  showConfirmButton: false,
                  timer: 4000,
                  timerProgressBar: true,
                  customClass: {
                    popup: 'swal-toast-dark'  // optional for more custom CSS
                  }
                });
              } else if (data.action === "removed") {
                this.classList.remove('active');
                Swal.fire({
                  toast: true,
                  position: "bottom-end",
                  background: "#000",
                  color: "#fff",
                  icon: "info",
                  title: "Removed from your Wishlist",
                  showConfirmButton: false,
                  timer: 4000,
                  timerProgressBar: true,
                  
                });
              }
            } else {
              Swal.fire("Error", data.message || "Wishlist update failed", "error");
            }
          })
          .catch(err => {
            console.error(err);
            Swal.fire("Error", "Something went wrong", "error");
          });
    });
  });


  ///////////////////////////////////////////////////////////////////////////////////////////


const variants = <%- JSON.stringify(variants) %>;


document.getElementById('addToCartForm').addEventListener('submit', async (e) => {
  e.preventDefault(); // ⛔ Prevent page reload

  const productId = "<%= product._id %>";
  const variantId = findVariant(
    document.getElementById('selectedSize').value,
    document.getElementById('selectedColour').value
  )?._id || null;
  const quantity = parseInt(document.getElementById('quantityInput').value, 10);

  // ✅ Extract visible values from DOM (cleaned of currency/commas)
  const baseValue = parseFloat(
    document.querySelector(".original-price").textContent.replace(/[₹,]/g, "")
  ) || 0;

  const saleValue = parseFloat(
    document.querySelector(".selling-price").textContent.replace(/[₹,]/g, "")
  ) || 0;

  const discountMatch = document.querySelector(".discount-tag")?.textContent.match(/(\d+)/);
  const discount = discountMatch ? parseInt(discountMatch[1], 10) : 0;

  console.log("Submitting Add to Cart", { productId, variantId, quantity, baseValue, price: saleValue, discount });

  try {
    const res = await fetch('/cart/add', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ productId, variantId, quantity, saleValue, baseValue, discount })
    });

    const data = await res.json();
    if (!res.ok) throw data; // forward backend error to catch

    Swal.fire('Added!', 'Product added to cart', 'success')
      .then(() => window.location.reload()); // optional reload if you want cart count to update
  } catch (err) {
    console.log(err.error);

    if (err.error === 'Not logged in') {
      Swal.fire({
        title: 'Please log in to continue',
        text: 'You need to log in before adding items to your cart.',
        icon: 'info',
        showCancelButton: true,
        confirmButtonText: 'Login',
        cancelButtonText: 'Cancel'
      }).then(result => {
        if (result.isConfirmed) {
          window.location.href = '/login';
        }
      });
    } else {
      Swal.fire('Error', err.error ||  'Something went wrong', 'error');
    }
  }
});

//////////////////////////////////////////////////////////////////////////////////////////

let qty = 1;
const qtyDisplay = document.getElementById('quantityDisplay');
const qtyInput = document.getElementById('quantityInput');

document.getElementById('qty-decrease').addEventListener('click', () => {
    if (qty > 1) qty--;
    qtyDisplay.textContent = qty;
    qtyInput.value = qty;
});

document.getElementById('qty-increase').addEventListener('click', () => {
    qty++;
    qtyDisplay.textContent = qty;
    qtyInput.value = qty;
});


///////////////////////////////////////////////////////////////////////////////////////////////


function findVariant(size, colour) {
  return variants.find(v => v.size === size && v.colour === colour);
}

function updateStockDisplay(stock) {
  const stockInfo = document.getElementById('stock-info');
  const stockInfo2 = document.getElementById('stock-info2');

  if (stock > 0) {
    stockInfo.textContent = `In Stock: ${stock}`;
    stockInfo.style.color = 'green';
    stockInfo2.textContent = "";
  } else {
    stockInfo2.textContent = "Out of Stock";
    stockInfo2.style.color = 'red';
    stockInfo.textContent = "";
  }
}

///////////////////////////////////////////////////////////////////////////////////////////////


function updatePriceAndDiscount(variant) {
  if (!variant) return;

  const sellingPriceElem = document.querySelector('.selling-price');
  const originalPriceElem = document.querySelector('.original-price');
  const discountTagElem = document.querySelector('.discount-tag');

  const basePrice = variant.basePrice || 0;
  const salePrice = variant.salePrice || 0;

  sellingPriceElem.textContent = `₹${salePrice}`;

  if (basePrice > salePrice) {
    originalPriceElem.innerHTML = `<del>₹${basePrice}</del>`;
    const discountPercent = Math.round(((basePrice - salePrice) / basePrice) * 100);
    discountTagElem.textContent = `${discountPercent}% OFF`;
    discountTagElem.style.display = 'inline';
  } else {
    originalPriceElem.textContent = '';
    discountTagElem.textContent = '';
    discountTagElem.style.display = 'none';
  }
}

///////////////////////////////////////////////////////////////////////////////////////////////


function updateImagesForColour(colour) {
  const variant = variants.find(v => v.colour === colour);
  if (!variant || !variant.productImage || variant.productImage.length === 0) return;

  const mainImage = document.getElementById('mainImage');
  const zoomLens = document.getElementById('zoomLens');

  mainImage.src = variant.productImage[0];
  zoomLens.style.backgroundImage = `url('${variant.productImage[0]}')`;

  const thumbnailsContainer = document.getElementById('thumbnailsContainer');
  thumbnailsContainer.innerHTML = '';

  variant.productImage.forEach((imgUrl, index) => {
    const img = document.createElement('img');
    img.src = imgUrl;
    img.className = 'thumbnail-img' + (index === 0 ? ' active' : '');
    img.dataset.index = index;
    img.style.cursor = 'pointer';
    img.onclick = () => changeMainImage(img, imgUrl);
    thumbnailsContainer.appendChild(img);
  });
}

////////////////////////////////////////////////////////////////////////////////////////////////


function changeMainImage(clickedThumbnail, imageUrl) {
  const mainImage = document.getElementById('mainImage');
  mainImage.src = imageUrl;

  const zoomLens = document.getElementById('zoomLens');
  zoomLens.style.backgroundImage = `url('${imageUrl}')`;

  document.querySelectorAll('.thumbnail-img').forEach(img => img.classList.remove('active'));
  clickedThumbnail.classList.add('active');
}

//////////////////////////////////////////////////////////////////////////////////////////////


function selectSize(button) {

 
  document.querySelectorAll('.size-btn').forEach(btn => btn.classList.remove('selected'));
  button.classList.add('selected');

  const selectedSize = button.innerText.trim();
  document.getElementById('selectedSize').value = selectedSize;

  const selectedColour = document.getElementById('selectedColour').value;

  const variant = findVariant(selectedSize, selectedColour);

  updateStockDisplay(variant ? variant.stock : 0);
  updatePriceAndDiscount(variant);

   if (variant) {
    updateWishlistButton(variant._id);
  }

 
}

//////////////////////////////////////////////

function updateWishlistButton(variantId) {
  if (!wishlistMainBtn) return;

  const isWishlisted = wishlistItems.some(
    w => w.productId === "<%= product._id.toString() %>" &&
         w.variantId === variantId
  );

  wishlistMainBtn.classList.toggle('active', isWishlisted);
  wishlistMainBtn.dataset.variantId = variantId;
}


///////////////////////////////////////////////////////////////////////////////////////////////


function selectColour(element, colour) {

  
  document.querySelectorAll('.colour-circle').forEach(c => c.classList.remove('selected'));
  element.classList.add('selected');

  document.getElementById('selectedColour').value = colour;

  const selectedSize = document.getElementById('selectedSize').value;

  const variant = findVariant(selectedSize, colour);

  updateStockDisplay(variant ? variant.stock : 0);
  updatePriceAndDiscount(variant);
  updateImagesForColour(colour);

  
  if (variant) {
    updateWishlistButton(variant._id);
  }
}

///////////////////////////////////////////////////////////////////////////////////////////////

window.addEventListener('DOMContentLoaded', () => {


  const defaultSize = document.getElementById('selectedSize').value;
  const defaultColour = document.getElementById('selectedColour').value;

  const variant = findVariant(defaultSize, defaultColour);

  updateStockDisplay(variant ? variant.stock : 0);
  updatePriceAndDiscount(variant);
  updateImagesForColour(defaultColour);


  const zoomContainer = document.querySelector('.zoom-container');
  const mainImage = document.getElementById('mainImage');
  const zoomLens = document.getElementById('zoomLens');

  mainImage.addEventListener('mouseenter', () => {
    zoomLens.style.visibility = 'visible';
    zoomLens.style.backgroundImage = `url('${mainImage.src}')`;
  });

  mainImage.addEventListener('mousemove', (e) => {
    const bounds = mainImage.getBoundingClientRect();
    const x = e.pageX - bounds.left - window.scrollX;
    const y = e.pageY - bounds.top - window.scrollY;

    const lensSize = zoomLens.offsetWidth / 2;

    let lensX = x - lensSize;
    let lensY = y - lensSize;

    if (lensX < 0) lensX = 0;
    if (lensY < 0) lensY = 0;
    if (lensX > bounds.width - zoomLens.offsetWidth) lensX = bounds.width - zoomLens.offsetWidth;
    if (lensY > bounds.height - zoomLens.offsetHeight) lensY = bounds.height - zoomLens.offsetHeight;

    zoomLens.style.left = `${lensX}px`;
    zoomLens.style.top = `${lensY}px`;

    const zoomLevel = 2;
    zoomLens.style.backgroundPosition = `-${x * zoomLevel - lensSize}px -${y * zoomLevel - lensSize}px`;
  });

  mainImage.addEventListener('mouseleave', () => {
    zoomLens.style.visibility = 'hidden';
  });


  
});

// ==================== Dynamic Review Section ====================
document.addEventListener("DOMContentLoaded", async () => {
  const productId = "<%= product._id %>";
  const reviewContainer = document.getElementById("reviewContainer");
  const dotContainer = document.getElementById("dotContainer");
  const prevBtn = document.getElementById("prevReview");
  const nextBtn = document.getElementById("nextReview");

  try {
    const response = await fetch(`/product-reviews/${productId}`);
    const data = await response.json();

    if (!data.success || data.reviews.length === 0) {
      reviewContainer.innerHTML = `<p>No reviews yet. Be the first to write one!</p>`;
      return;
    }

    const reviews = data.reviews;
    let currentIndex = 0;

    // Build reviews
    reviewContainer.innerHTML = reviews
      .map(
        (r) => `
        <div class="review">
          <strong>${r.user?.name || "Anonymous"}</strong>
          <div>${"⭐".repeat(r.rating)}${"☆".repeat(5 - r.rating)}</div>
          <p class="mt-2">${r.reviewText}</p>
        </div>`
      )
      .join("");

    // Function to render dots (always 3 max)
    function renderDots() {
      const totalDots = Math.min(3, reviews.length);
      let start = 0;
      if (reviews.length > 3) {
        // Center currentIndex in dots if possible
        if (currentIndex === 0) start = 0;
        else if (currentIndex === reviews.length - 1) start = reviews.length - 3;
        else start = currentIndex - 1;
      }

      dotContainer.innerHTML = "";
      for (let i = start; i < Math.min(start + 3, reviews.length); i++) {
        const dot = document.createElement("span");
        dot.className = "dot" + (i === currentIndex ? " active" : "");
        dot.dataset.index = i;
        dot.addEventListener("click", () => {
          currentIndex = i;
          updateCarousel();
        });
        dotContainer.appendChild(dot);
      }
    }

    function updateCarousel() {
  const containerWidth = document.querySelector('.review-carousel').offsetWidth;
  reviewContainer.style.transform = `translateX(-${currentIndex * containerWidth}px)`;
  renderDots();
}
console.log(reviews.length, reviews);



    function showNext() {
      if (currentIndex < reviews.length - 1) {
        currentIndex++;
        updateCarousel();
      }
    }

    function showPrev() {
      if (currentIndex > 0) {
        currentIndex--;
        updateCarousel();
      }
    }

    nextBtn.addEventListener("click", showNext);
    prevBtn.addEventListener("click", showPrev);

    updateCarousel();
  } catch (err) {
    console.error(err);
    reviewContainer.innerHTML = `<p class="text-danger">Failed to load reviews.</p>`;
  }
});


if (variant) {
    updateWishlistButton(variant._id);
  }

/////////////////////////////////////////////////////////////////////////////////////

  

///////////////////////////////////////////////////////////////////////////////////////////


</script>



     

<%-include("../../views/partials/user/footer") %>
